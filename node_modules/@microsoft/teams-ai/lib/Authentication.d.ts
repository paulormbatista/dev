/**
 * @module teams-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { TurnContext } from 'botbuilder';
import { OAuthPromptSettings } from 'botbuilder-dialogs';
import { TurnState } from './TurnState';
import { DefaultTurnState } from './DefaultTurnStateManager';
import { Application } from './Application';
/**
 * Authentication service.
 */
export declare class Authentication<TState extends TurnState = DefaultTurnState> {
    private readonly _oauthPrompt;
    /**
     * Creates a new instance of the `Authentication` class.
     * @param app Application for adding routes.
     * @param settings Authentication settings.
     */
    constructor(app: Application<TState>, settings: OAuthPromptSettings);
    /**
     * Signs in a user.
     * @remarks
     * This method will be called automatically by the Application class.
     * @param context Current turn context.
     * @param state Application state.
     * @returns The authentication token or undefined if the user is still login in.
     */
    signInUser(context: TurnContext, state: TState): Promise<string | undefined>;
    /**
     * Signs out a user.
     * @param context Current turn context.
     */
    signOutUser(context: TurnContext, state: TState): Promise<void>;
    /**
     * @private
     */
    private getUserAuthStatePropertyName;
    /**
     * @private
     */
    private getUserDialogStatePropertyName;
    /**
     * @private
     */
    private runDialog;
}
//# sourceMappingURL=Authentication.d.ts.map