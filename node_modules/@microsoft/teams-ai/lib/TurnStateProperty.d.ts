/**
 * @module teams-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { StatePropertyAccessor, TurnContext } from 'botbuilder';
import { TurnState } from './TurnState';
/**
 * Maps an applications Turn State property to a Bot State property.
 * @template T Optional. Type of the property being mapped. Defaults to any.
 */
export declare class TurnStateProperty<T = any> implements StatePropertyAccessor<T> {
    private readonly _state;
    private readonly _propertyName;
    /**
     * Creates a new instance of the `TurnStateProperty` class.
     * @param state Current application turn state.
     * @param scope Name of properties the memory scope to use.
     * @param propertyName Name of the property to use.
     */
    constructor(state: TurnState, scope: string, propertyName: string);
    /**
     * Deletes the state property.
     */
    delete(context: TurnContext): Promise<void>;
    /**
     * Returns the state property value.
     */
    get(context: TurnContext): Promise<T | undefined>;
    get(context: TurnContext, defaultValue: T): Promise<T>;
    /**
     * Replace's the state property value.
     */
    set(context: TurnContext, value: T): Promise<void>;
}
//# sourceMappingURL=TurnStateProperty.d.ts.map